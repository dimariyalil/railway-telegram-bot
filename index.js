const { Telegraf } = require('telegraf');
const express = require('express');

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);

console.log("üîê BOT_TOKEN:", process.env.BOT_TOKEN);
console.log("üåê BOT_DOMAIN:", process.env.BOT_DOMAIN);

bot.command('start', (ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! Railway Telegram Bot —Ä–∞–±–æ—Ç–∞–µ—Ç üöÄ');
});

bot.on('web_app_data', (ctx) => {
  try {
    const data = JSON.parse(ctx.webAppData.data);
    ctx.reply(`–¢—ã –≤—ã–±—Ä–∞–ª: ${data.matchId}`);
  } catch (e) {
    ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö üß®');
  }
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞
app.use(bot.webhookCallback('/webhook'));

app.get('/', (req, res) => res.send('üöÄ Bot is running'));

// –ó–∞–ø—É—Å–∫ Express-—Å–µ—Ä–≤–µ—Ä–∞
app.listen(3000, async () => {
  console.log('üöÄ Server running on port 3000');

  // –ò —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî —Å—Ç–∞–≤–∏–º webhook
  if (process.env.BOT_DOMAIN) {
    try {
      const res = await bot.telegram.setWebhook(`${process.env.BOT_DOMAIN}/webhook`);
      console.log("‚úÖ Webhook set successfully", res);
    } catch (e) {
      console.error("‚ùå Failed to set webhook:", e);
    }
  } else {
    console.error("‚ùå BOT_DOMAIN is missing");
  }
});
